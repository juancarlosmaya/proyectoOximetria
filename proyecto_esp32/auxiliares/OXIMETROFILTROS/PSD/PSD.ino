/*
PSD DE SEÃ‘AL ROJO E INFRAROJO
*/

#include "arduinoFFT.h"

arduinoFFT FFT = arduinoFFT(); /* Create FFT object */
/*
These values can be changed in order to evaluate the functions
*/
const uint16_t samples = 512; // //This value MUST ALWAYS be a power of 2
double senal5seg[samples];
const double samplingFrequency = 100;
const uint8_t amplitude = 100;
double senalPSD[samples/2];
double vImag2[samples];

/*
These are the input and output vectors
Input vectors receive computed results from FFT
*/
const uint16_t ventana= 128;
double vImag[ventana];
double muestra[ventana];
double psd[ventana/2];
double psdPromedio[ventana/2];
int i;

void setup()
{
  Serial.begin(115200);

}

void loop()
{


  //double senalIR[512]={0, 0, 0, 0, 0, 0, 3.29, 3.29, 3.29, 3.29, 3.43, 4.22, 6.21, 9.55, 13.97, 19.05, 24.29, 29.18, 33.2, 35.86, 36.8, 35.83, 32.9, 28.16, 21.99, 14.93, 7.51, 0.18, -6.67, -12.75, -17.83, -21.77, -24.47, -25.87, -25.92, -24.69, -22.34, -19.11, -15.24, -10.97, -6.51, -1.99, 2.57, 7.16, 11.68, 15.98, 19.89, 23.24, 25.95, 27.99, 29.49, 30.63, 31.58, 32.35, 32.91, 33.24, 33.31, 33.07, 32.53, 31.9, 31.42, 31.24, 31.35, 31.62, 31.95, 32.21, 32.28, 32.2, 32.18, 32.41, 32.92, 33.56, 34.1, 34.27, 33.87, 32.82, 31.3, 29.55, 27.69, 25.53, 22.62, 18.34, 12.03, 3.05, -8.9, -23.62, -40.49, -58.73, -77.56, -96.18, -113.77, -129.64, -143.2, -153.84, -160.83, -163.61, -162.12, -156.78, -148.13, -136.74, -123.17, -108.05, -91.85, -74.72, -56.78, -38.44, -20.31, -2.98, 13.01, 27.18, 39.29, 49.45, 57.96, 64.97, 70.41, 74.21, 76.47, 77.41, 77.23, 76.29, 75.24, 74.8, 75.3, 76.6, 78.34, 80.15, 81.73, 82.81, 83.31, 83.54, 83.85, 84.26, 84.47, 84.25, 83.37, 81.53, 78.66, 75.12, 71.45, 67.83, 63.72, 58.03, 49.41, 36.4, 17.55, -8, -39.88, -76.79, -117.02, -158.74, -200, -238.76, -273.2, -301.77, -323.11, -335.83, -338.99, -332.5, -317.16, -294.21, -264.96, -230.89, -193.44, -153.54, -111.59, -68.04, -23.79, 19.93, 61.88, 100.72, 135.2, 164.56, 188.91, 208.89, 225.09, 237.72, 246.76, 252.35, 254.8, 254.32, 251.41, 247.18, 243.17, 240.38, 238.75, 237.64, 236.42, 234.47, 231.08, 226, 219.83, 213.54, 207.8, 202.6, 197.5, 191.96, 185.34, 176.95, 166.6, 154.79, 142.2, 128.76, 113.2, 93.57, 67.86, 34.21, -8.72, -60.78, -119.88, -182.88, -246.72, -308.75, -366.55, -417.73, -460.36, -492.98, -514, -521.82, -515.89, -497.05, -466.94, -427.44, -380.76, -329.29, -274.91, -218.31, -159.74, -100.09, -41.08, 15.38, 67.55, 113.76, 152.54, 183.45, 207.34, 225.63, 239.38, 249.13, 255.25, 258.13, 258.16, 255.83, 251.99, 247.93, 244.91, 243.36, 242.77, 242.26, 241.03, 238.4, 233.87, 227.45, 219.97, 212.52, 205.63, 198.98, 191.82, 183.46, 173.17, 160.3, 144.94, 128.04, 110.42, 91.83, 70.96, 45.9, 14.37, -25.68, -75.15, -132.99, -196.58, -262.74, -328.38, -390.54, -446.32, -493.29, -529.54, -553.51, -563.82, -559.78, -542.13, -512.92, -474.54, -429.12, -378.68, -325.07, -269.35, -211.85, -153.1, -94.44, -37.56, 15.84, 64.08, 105.76, 140.24, 168.02, 190.31, 208.11, 221.82, 231.57, 237.51, 239.84, 238.82, 235.22, 230.55, 226.43, 223.73, 222.36, 221.68, 220.87, 219.06, 215.57, 210.51, 204.87, 199.64, 195.03, 190.58, 185.78, 180.13, 173.04, 164.1, 153.57, 142.2, 130.31, 117.22, 101.44, 81.14, 54.54, 20.39, -21.33, -69.13, -120.38, -172.19, -221.93, -267.19, -305.81, -336.2, -357.44, -368.93, -370.18, -361.07, -342.39, -315.72, -282.92, -245.73, -205.84, -164.91, -124.07, -83.73, -44.29, -6.62, 28.19, 59.25, 85.92, 107.78, 124.81, 137.56, 146.96, 153.9, 158.8, 161.71, 162.7, 161.96, 159.71, 156.41, 152.83, 149.84, 147.81, 146.44, 145.2, 143.6, 141.2, 137.62, 132.83, 127.26, 121.49, 115.92, 110.61, 105.45, 100.18, 94.39, 87.65, 79.68, 70.54, 60.23, 48.21, 33.42, 14.92, -7.75, -34.49, -64.58, -96.44, -127.83, -156.51, -180.85, -199.89, -213.05, -220.16, -221.41, -217.24, -208.07, -194.29, -176.51, -155.67, -132.82, -108.97, -85.06, -61.95, -40.18, -19.85, -0.86, 16.67, 32.34, 45.68, 56.39, 64.35, 69.61, 72.54, 73.79, 74.01, 73.57, 72.67, 71.49, 70.13, 68.61, 67.05, 65.73, 64.92, 64.72, 64.92, 65.21, 65.25, 64.79, 63.59, 61.57, 58.88, 55.86, 52.7, 49.41, 45.95, 42.27, 38.25, 33.7, 28.47, 22.51, 15.79, 8.14, -0.71, -10.93, -22.48, -35.07, -48.18, -61.09, -72.96, -83.02, -90.76, -95.95, -98.55, -98.7, -96.67, -92.75, -87.18, -80.18, -72, -62.97, -53.49, -43.89, -34.48, -25.55, -17.27, -9.71, -2.84, 3.3, 8.61, 13.01, 16.44, 18.93, 20.5, 21.3, 21.56, 21.57, 21.53, 21.48, 21.43, 21.34, 21.2, 20.95, 20.6, 20.24, 19.97, 19.84, 19.78, 19.72, 19.57, 19.23, 18.65, 17.84, 16.89, 15.89, 14.91, 13.93, 12.93, 11.84, 10.58, 9.06, 0, 0, 0, 0, 0, 0, 0,};
  double senalIR[512]={0,0,0,0,0,0,0,0,1,2,3,5,7,9,11,12,13,14,14,13,11,9,5,0,-4,-10,-16,-22,-27,-32,-36,-39,-41,-42,-41,-40,-38,-34,-31,-26,-22,-17,-12,-7,-2,2,7,11,15,18,20,23,25,27,29,30,32,33,33,34,35,36,37,39,40,42,43,44,46,47,49,51,53,55,56,56,56,56,55,54,52,49,44,36,24,10,-7,-25,-46,-66,-86,-104,-121,-135,-146,-153,-155,-154,-149,-141,-131,-119,-105,-91,-75,-58,-41,-24,-8,5,18,29,38,46,53,59,63,65,67,67,68,69,72,75,78,82,85,88,91,93,96,98,100,102,103,104,103,101,99,97,95,91,84,72,53,28,-3,-42,-85,-130,-176,-221,-262,-298,-328,-350,-362,-365,-359,-345,-324,-297,-266,-232,-195,-155,-114,-71,-30,9,45,77,105,128,149,167,181,192,200,206,209,211,213,216,220,225,230,234,237,238,238,237,238,238,239,239,238,235,230,223,215,206,195,179,156,125,84,32,-27,-93,-162,-230,-295,-356,-409,-453,-487,-508,-515,-509,-492,-464,-428,-386,-341,-291,-238,-183,-127,-72,-20,27,68,102,130,153,173,188,200,209,215,219,222,224,228,233,239,245,250,254,256,256,255,254,254,253,252,249,245,237,227,215,201,187,169,147,117,78,29,-30,-96,-167,-239,-310,-375,-434,-483,-520,-544,-555,-551,-536,-511,-478,-439,-395,-348,-298,-245,-191,-137,-85,-37,4,40,71,96,118,136,151,162,170,174,176,177,178,181,185,190,194,198,200,201,201,201,202,203,203,203,201,197,191,184,176,167,155,138,114,81,41,-7,-59,-114,-168,-219,-264,-302,-332,-353,-363,-363,-354,-336,-311,-281,-247,-211,-175,-138,-101,-65,-30,0,28,52,71,87,99,109,118,125,129,133,134,135,135,136,138,140,143,145,147,147,146,144,142,140,138,136,134,131,127,122,115,107,97,84,67,45,18,-11,-45,-78,-110,-138,-162,-180,-192,-199,-200,-197,-188,-175,-159,-140,-119,-98,-77,-57,-38,-20,-2,13,26,38,47,54,58,61,63,64,65,65,66,66,66,66,67,68,70,72,74,75,75,75,74,73,71,69,67,65,62,58,54,49,43,36,27,17,5,-7,-21,-35,-49,-61,-70,-78,-83,-86,-86,-85,-82,-77,-71,-64,-56,-48,-40,-32,-25,-18,-11,-5,0,3,7,9,11,12,13,13,13,14,14,14,15,15,15,15,15,15,15,16,16,16,16,15,15,14,13,13,12,11,10,9,7,0,0,0,0,0,0};
  double senalRojo[512]={0,0,0,0,0,0,0,2,6,13,23,34,45,56,65,72,76,77,75,70,61,49,34,18,0,-19,-38,-56,-72,-87,-98,-107,-113,-116,-116,-114,-110,-104,-97,-88,-78,-68,-57,-46,-35,-25,-16,-8,-1,4,10,14,18,22,24,27,29,31,34,38,41,45,49,54,58,62,67,72,77,82,87,91,94,97,99,101,102,103,103,102,98,89,76,58,33,2,-34,-75,-119,-164,-208,-248,-282,-308,-326,-336,-337,-331,-317,-297,-271,-239,-202,-162,-121,-79,-39,-1,33,65,93,118,139,156,170,180,187,193,198,203,210,216,224,231,238,245,253,261,269,277,285,291,296,299,301,302,303,303,301,297,289,274,250,216,168,106,30,-58,-157,-263,-370,-474,-568,-648,-711,-754,-776,-779,-763,-730,-682,-621,-548,-466,-378,-286,-194,-105,-20,58,130,195,251,299,337,367,388,403,412,419,425,431,438,445,453,460,467,473,481,488,496,503,508,510,510,506,499,491,480,467,451,428,398,355,296,219,121,4,-132,-284,-446,-609,-767,-911,-1034,-1130,-1197,-1233,-1241,-1221,-1178,-1114,-1031,-933,-821,-699,-572,-442,-314,-192,-79,24,117,198,266,322,366,398,421,437,447,456,464,473,484,495,506,516,525,533,540,547,553,557,558,556,549,540,527,512,496,476,452,422,380,323,247,151,34,-102,-256,-420,-588,-751,-903,-1034,-1139,-1214,-1258,-1271,-1255,-1214,-1151,-1070,-971,-859,-737,-610,-480,-353,-231,-119,-18,72,151,218,273,317,349,372,386,395,401,408,416,424,433,441,449,457,464,472,479,486,490,492,491,487,480,472,463,452,438,420,394,358,309,243,161,64,-46,-166,-291,-414,-531,-634,-718,-780,-817,-830,-820,-789,-741,-679,-606,-523,-434,-342,-249,-159,-75,0,66,123,172,211,243,266,284,295,301,303,303,303,304,306,308,312,315,318,320,322,324,326,327,328,327,324,319,311,303,293,281,267,247,221,185,139,83,18,-53,-127,-201,-271,-333,-385,-425,-452,-463,-461,-446,-421,-386,-345,-300,-252,-202,-152,-103,-56,-12,27,61,90,113,132,146,157,164,168,170,171,170,169,168,168,169,170,172,173,174,174,173,172,171,169,167,164,160,155,148,141,132,123,112,98,81,60,35,6,-24,-56,-88,-118,-144,-166,-183,-195,-201,-201,-197,-188,-175,-159,-142,-124,-105,-86,-67,-50,-33,-19,-6,4,13,19,24,28,30,32,32,32,32,32,31,31,31,31,31,32,32,32,32,32,31,31,30,30,29,28,26,24,22,20,17,13,0,0,0,0,0,0};
  

  
  
  /* Print the results of the simulated sampling according to time */
  Serial.println("Data:");
  for (i=0;i<samples;i++){
    senal5seg[i]=senalIR[i];
  }

  // submuestreo 1/2
  int j=0;
  for (i=0;i<samples;i=i+2){
    senalPSD[j]=senal5seg[i];
    j++;
  }
  
  // Hamming
  // FFT.Windowing(vReal, samples, FFT_WIN_TYP_HAMMING, FFT_FORWARD);	/* Weigh data */

  
  int overlap= int(ventana*0.7);
  int saltoNuevaVentana= ventana-overlap;
  int numeroVentanaActual=0;
  int puntero;
  for (i=0;i<ventana/2;i++) {psdPromedio[i]=0;}
  for (puntero=0;puntero<((samples/2)-ventana);puntero=(puntero+saltoNuevaVentana)){
    numeroVentanaActual=numeroVentanaActual+1;

    // Extraer muestra
    for (i=0;i<=ventana;i++){
      muestra[i]=senalPSD[puntero+i];
    }  

    // Hamming
    FFT.Windowing(muestra, ventana, FFT_WIN_TYP_HAMMING, FFT_FORWARD);  /* Weigh data */

    // Fourier
    for (i=0;i<ventana;i++){vImag[i]=0;}
    FFT.Compute(muestra, vImag, ventana, FFT_FORWARD); /* Compute FFT */
    FFT.ComplexToMagnitude(muestra, vImag, ventana); /* Compute magnitudes */
    //Serial.println("psd muestra");
    for (i=0;i<ventana/2;i++){
      psd[i]=2*muestra[i]*muestra[i]/(ventana*50.48);
      psdPromedio[i]=psdPromedio[i]+psd[i];
      //Serial.println(psd[i]);
    }
    
    

  }
  Serial.println("PSD promedio");
  for (i=0;i<ventana/2;i++){
    psdPromedio[i]=psdPromedio[i]/numeroVentanaActual;
    Serial.println(psdPromedio[i]);
  }

  //  Encontrar el PSD[j] mÃ¡ximo
  double maxPSD_v=0;
  double maxPSD_i=0; 
  for ( int i = 0; i < ventana/2; i++ )
  {
    if ( psdPromedio[i] > maxPSD_v )
    {
       maxPSD_v = psdPromedio[i];
       maxPSD_i = i;
    }
  }

  double valorAC=maxPSD_v;
  double frecuenciaMaxima= maxPSD_i*(((samplingFrequency/2)/2)/(ventana/2));
  Serial.print("El valor AC es: ");
  Serial.println(valorAC);
  
  Serial.print("la frecuencia cardÃ­aca es: ");
  Serial.println(frecuenciaMaxima*60);

  
  



  while(1); /* Run Once */

}
//////////////////////////////////////
//El valor AC es: 23701.82////////////
//la frecuencia cardÃ­aca es: 93.75////
//////////////////////7777////////////


  /*
  FFT.Compute(senal5seg, vImag2, samples, FFT_FORWARD); 
  FFT.ComplexToMagnitude(senal5seg, vImag2, samples); 
  Serial.println("Computed magnitudes:");
  for (i=0;i<samples/2;i++){
    Serial.println(senal5seg[i]);
  }
  

  double x = FFT.MajorPeak(senal5seg, samples, samplingFrequency);
  Serial.print("La frecuencia cardÃ­aca es de: ");
  Serial.println(x*60, 6);
  */
